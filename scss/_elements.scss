/**
 * This file is used to describe our core elements. These are the
 * base styles for most elements, as well as anything that wasn't 
 * covered in the CSS reset
 */
@use 'globals';

@import url("https://fonts.googleapis.com/css2?family=Darker+Grotesque:wght@900&family=Fira+Sans:wght@200;400&family=Fira+Sans+Extra+Condensed:wght@400;700&display=swap");

/**
  * Let's put some basic setup stuff here for now...
  */
:root {
  /* Here's our colors!!! */
  --background-color: #161616;
  --foreground-color: #ffffff;

  // --background-color: #ffffff;
  // --foreground-color: #161616;

  /* Setting up our fonts */
  // --font-headers: "Darker Grotesque";
  --font-headers: "ChronoType";
  --font-regular: "Fira Sans";

  /* This is where we define ALL the font sizes!!! */
  --base-font-size: 1.4rem;

  --header-font-scale-factor: 0.15;
  --h6-font-size: calc(
    var(--base-font-size) + var(--header-font-scale-factor) * 1rem
  );
  --h5-font-size: calc(
    var(--base-font-size) + var(--header-font-scale-factor) * 2rem
  );
  --h4-font-size: calc(
    var(--base-font-size) + var(--header-font-scale-factor) * 3rem
  );
  --h3-font-size: calc(
    var(--base-font-size) + var(--header-font-scale-factor) * 5rem
  );
  --h2-font-size: calc(
    var(--base-font-size) + var(--header-font-scale-factor) * 8rem
  );
  --h1-font-size: calc(
    var(--base-font-size) + var(--header-font-scale-factor) * 13rem
  );

  --tag-font-scale-factor: 0.8;
  --tag-font-size: calc(var(--base-font-size) * var(--tag-font-scale-factor));

  --grid-link-font-size: calc(var(--base-font-size) * 1.5);
  --grid-link-recent-font-size: calc(var(--base-font-size) * 2.5);

  /**
  * Managing line heights
  */
  --text-line-height: 1.35;
  --header-line-height: 1;

  /**
  * Space stuff ðŸš€
  */
  --base-space-size: 1rem;
  --space-half: calc(var(--base-font-size) * 0.5);
  --space-1: calc(var(--base-font-size) * 1);
  --space-2: calc(var(--base-font-size) * 2);
  --space-3: calc(var(--base-font-size) * 3);
  --space-4: calc(var(--base-font-size) * 5);
  --space-5: calc(var(--base-font-size) * 8);

  @media (min-width: globals.$bp-large) {
    --header-font-scale-factor: 0.25;
  }
}

/**
 * Some additional resets. Removing default margin and padding and
 * setting box-sizing to "border-box" because why wouldn't you???
 */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  min-height: 0vw;
}

/**
 * Setting up the body styles ðŸ•º
 */
body {
  background: var(--background-color);
  color: var(--foreground-color);

  font-weight: 100;
  font-family: var(--font-regular);
  font-size: var(--base-font-size);
  line-height: 1.35; /* I don't know if this should be a variable. Haven't needed it yet though! */
}

/**
 * @TODO All elements should be wrapped in a "main" tag at the root.
 * Not sure if this should be a component or not, but we'll leave
 * it as-is for now.
 *
 * Also not sure if this stuff should be left to the the end-user
 * to customize???
 *
 * ~reccanti 4/11/2021
 */
main {
  max-width: 1000px;
  margin: 0 auto;
  padding: var(--space-half);
  // padding-top: env(safe-area-inset-top);
  // padding-bottom: env(safe-area-inset-bottom);

  & > *:not(:first-child) {
    margin-top: var(--space-2);
  }

  & section:not(:first-child) {
    margin-top: var(--space-3);
  }

  @media (min-width: globals.$bp-large) {
    padding: var(--space-2);
  }
}

/**
* @TODO - Maybe it's not the best idea to have such a
* specific way of targeting this...
*/
section div > *:not(:first-child) {
  margin-top: var(--space-1);
}

/**
* Let's make those horizontal rules fancy ðŸŽ©
*/
hr {
  border: none;
  border-bottom: 0.35rem dotted;
  color: var(--foreground-color);
}

/**
* Umm, I guess some list things
*/

ul,
ol {
  list-style-type: disc;
}

ul > li,
ol > li {
  margin-left: var(--space-1);
}

li:not(:first-child) {
  margin-top: var(--space-1);
}

/**
 * L33t c0d3
 */
code {
  font-family: monospace;
}

/**
* Heck yeah. Time for links, baby
*/
a {
  display: inline-block;
  color: var(--foreground-color);
  font-weight: bold;
}

a:hover,
a:focus {
  background: var(--foreground-color);
  color: var(--background-color);
}

/**
* Header Crap!
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--font-headers);
  line-height: 0.8;
}

h6 {
  font-size: var(--h6-font-size);
}
h5 {
  font-size: var(--h5-font-size);
}
h4 {
  font-size: var(--h4-font-size);
}
h3 {
  font-size: var(--h3-font-size);
}
h2 {
  font-size: var(--h2-font-size);
}
h1 {
  font-size: var(--h1-font-size);
}

/**
* Buttons? Classic
*/

button {
  all: unset;
  cursor: pointer;
  border: 1px solid var(--foreground-color);
  padding: var(--space-half);
  text-align: center;
}

button:hover,
button:focus {
  background: var(--foreground-color);
  color: var(--background-color);
}

/**
* All that good form stuff!!!
*/
label {
  display: flex;
  flex-direction: column;
  width: 100%;
  font-size: var(--tag-font-size);
}

/**
* @TODO - I don't like that I need to use this weird class,
* but I don't have a better way of dealing with this right
* now. Maybe use a :has() polyfill?
*/
label.required::after {
  content: "(required)";
}

label > * {
  margin-top: var(--space-half);
}

/**
* @TODO It seems like, in addition to the "unset", I need to
* also do some sort of "reset". Bleh
* ~reccanti 4/12/2021
*/
textarea {
  /* resets */
  background: unset;
  font: unset;

  background-color: var(--background-color);
  color: var(--foreground-color);

  box-sizing: border-box;
  resize: both;
  border: 1px solid var(--foreground-color);
  padding: var(--space-half);
  font-style: italic;
  font-size: var(--base-font-size);
  width: 100%;
}

textarea:focus {
  outline: none;
  background-color: var(--foreground-color);
  color: var(--background-color);
  font-style: normal;
}

input[type="text"] {
  /* resets */
  background: unset;
  font: unset;

  background-color: var(--background-color);
  color: var(--foreground-color);

  box-sizing: border-box;
  border: 1px solid var(--foreground-color);
  padding: var(--space-half);
  font-style: italic;
  font-size: var(--base-font-size);
  width: 100%;
}

input[type="text"]:focus {
  outline: none;
  background-color: var(--foreground-color);
  color: var(--background-color);
  font-style: normal;
}

input:required {
  border-style: double;
}
